spring.application.name=personneleducation
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.jpa.properties.hibernate.default_schema=personnel_education
spring.datasource.username=postgres
spring.datasource.password=1
#<create | create-drop | update | validate | none>
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Server Port ayarlari (Server potu 8090 olarak ayarland?)
server.port=8090

# Bu özellik, Hibernate'in PostgreSQL'in SQL lehçesini kullanarak sorgular olu?turmas?n? sa?lar.
# Her veritaban? için farkl? bir hibernate.dialect de?eri kullan?l?r.
# Örne?in MySQL için org.hibernate.dialect.MySQL8Dialect veya org.hibernate.dialect.MySQL5InnoDBDialect kullan?l?r.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Connection Pool Ayarlar? (HikariCP varsay?lan olarak kullan?l?r)
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=200
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.transaction-isolation=TRANSACTION_READ_COMMITTED


# Swagger/OpenAPI konfigürasyonlar?
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha
springdoc.show-actuator=true

# API dokümantasyonunu özelle?tirme
springdoc.info.title=Personel API
springdoc.info.version=1.0.0
springdoc.info.description=Personel, E?itim Program? ve Ödev yönetimi için API
springdoc.info.contact.name=API Support
springdoc.info.contact.email=support@example.com
springdoc.info.contact.url=https://example.com
springdoc.info.license.name=Apache 2.0
springdoc.info.license.url=https://www.apache.org/licenses/LICENSE-2.0