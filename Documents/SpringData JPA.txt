|----------------------------------------------------------------------------------------------------------------------|
|---------------------------------------------------SPRING DATA JPA----------------------------------------------------|
|----------------------------------------------------------------------------------------------------------------------|
     Spring Data JPA(Java Persistence Api) :
        Spring Framwork'ün bir parçası olup ORM standartlarına sahip bir API'dır.
        Spring Data JPA Hibernate altyapısını kullanmaktadır.
------------------------------------------------------------------------------------------------------------------------
    Hibernate ORM (Object Relational Mapping) :
------------------------------------------------------------------------------------------------------------------------
        Class ile DB Tablosunu mapleme işlemini gerçekleştirir.

        HQL: Hibernate Query Language - Sınıf isimleri ve değişken isimleri ile sorgulama yapmak için kullanılır.
        SQL: Tablo ismi ve tablo içerisindeki kolon isimleri ile sorgular yazılır.

        HQL Sorgusu ile Kullanımı
            nativeQuery default olarak false gelir ve HQL sorgusu yazacak şekilde kullanılır.
                @Query(value = "from Student" , nativeQuery = false)

        SQL Sorgusu ile Kullanımı
            Eğer nativeQuery true ise norlam SQL sorgusu şeklinde veritabanında Tablo ve Colum adına göre sorgu yazılır.
            @Query(value = "select  * from student.student" , nativeQuery = true)//student şemasındaki student tablosuna git


    Kaynaklar:

        https://www.javaguides.net/2020/10/defining-jpa-entity-entity-annotation.html
        https://hackernoon.com/using-postgres-effectively-in-spring-boot-applications
------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------------------
    Entity Class ve DTO Class
------------------------------------------------------------------------------------------------------------------------
        Entity Class: Tüm veri tabanı alanları ile eşleşen class'dır.
        DTO Class   : Data Transfer Object.Sadece istenilen fieldların dışarı verilmesini sağlar.

        Güvenlik nedeniyle @Entitiy anotasyonu ile işaretlenmiş sınıflar dışarıya açılmaz. Bunun yerine DTO sınıfları kullanılır.

------------------------------------------------------------------------------------------------------------------------
POSTGER SQL Setup Olmadan Kurulum
14.15.3
postgres
1


https://www.enterprisedb.com/download-postgresql-binaries
https://www.geeksforgeeks.org/postgresql-installing-postgresql-without-admin-rights-on-windows/
C:\Users\xsaozdemir\Program Files\PostgreSQL\16\data


Kurulum
    initdb -D C:\Users\xsaozdemir\pgdata -U postgres -E UTF8 --locale=C
Sunucu Başlat
    pg_ctl.exe start -D "C:\Users\xsaozdemir\pgdata" -l logfile.log

Sunucuyu Durdur:
    pg_ctl.exe stop -D "C:\Users\xsaozdemir\pgdata" -m smart

initdb -D C:\Users\xsaozdemir\Program Files\PostgreSQL\14\data -U postgres -E UTF8 --locale=C
şifre sorarsa 1 gir. (geliştirme ortamı için)

pg_ctl.exe register -N "postgresql-x64-14" -D "C:\Users\xsaozdemir\pgdata" -U postgres -P "postgres_şifresi"

ALTER ROLE postgres WITH PASSWORD 'yeni_şifre';

-------------------------------------------------
psql -U postgres -d postgres -h localhost -p 5432  1

psql -U postgres -d postgres

CREATE DATABASE postgres; -- Veritabanı adı
CREATE USER postgres WITH PASSWORD '1'; -- Kullanıcı adı ve şifre.  KÖTÜ FİKİR!
GRANT ALL PRIVILEGES ON DATABASE postgres TO postgres;

psql -U postgres -d postgres -h localhost -p 5432
Şifre sorarsa: 1

----------------------------------------------------------------------------------
CREATE DATABASE root;
CREATE USER root WITH PASSWORD 'root'; -- Güvenlik nedeniyle root kullanımı ve bu kadar basit şifre önerilmez!
GRANT ALL PRIVILEGES ON DATABASE root TO root;

psql -U root -d root


