spring.application.name=exception-management
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.jpa.properties.hibernate.default_schema=exception_management
spring.datasource.username=postgres
spring.datasource.password=1
#<create | create-drop | update | validate | none>
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#Bu Ã¶zellik, Hibernate'in PostgreSQL'in SQL lehÃ§esini kullanarak sorgular oluÅturmasÄ±nÄ± saÄlar
# Her veritabanÄ± iÃ§in farklÄ± bir hibernate.dialect deÄeri kullanÄ±lÄ±r.
# ÃrneÄin MySQL iÃ§in org.hibernate.dialect.MySQL8Dialect veya org.hibernate.dialect.MySQL5InnoDBDialect kullanÄ±lÄ±r.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Connection Pool AyarlarÄ± (HikariCP varsayÄ±lan olarak kullanÄ±lÄ±r)
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.transaction-isolation=TRANSACTION_READ_COMMITTED

# Scheduling altyapisi icin pool size ayarlanmak istenirse kullanilir.
spring.task.scheduling.pool.size=2